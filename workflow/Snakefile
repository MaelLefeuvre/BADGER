configfile: "./config/config.yml"
include: "rules/preprocess-reference.smk"
include: "rules/preprocess-1000-genomes.smk"
include: "rules/pedigree-sims.smk"
include: "rules/gargammel.smk"
include: "rules/preprocess-fastq.smk"
include: "rules/variant-calling.smk"
include: "rules/READ.smk"
include: "rules/grups-rs.smk"
include: "rules/TKGWV2.smk"

wildcard_constraints:
    chr    = "\d+",
    sample = "ped[0-9]{1,2}_[-gGbBiIsS0-9]+"

def my_samples(wildcards):
    with checkpoints.get_samples.get().output[0].open() as f:
        return expand("results/02-preprocess/06-mapdamage/{sample}/{sample}.srt.rmdup.rescaled.bam", sample=str.split(f.readline().replace('\n',''),'\t')) 
        #return expand("results/01-gargammel/fastqs/{sample}_s{for_rev}.fq.gz", for_rev=[1,2], sample=str.split(f.readline().replace('\n',''),'\t'))




rule ped_sim:
    input: expand("results/00-ped-sim/{POP}-pedigrees-M2-m2-snps-merged.vcf.gz", POP=config['ped-sim']['params']['pop'])

rule gargammel:
    input: my_samples

rule READ:
    input: READ_output

rule GRUPS:
    input: GRUPS_output

rule TKGWV2:
    input: TKGWV2_output

rule all:
    input:
        rules.READ.input,
        rules.GRUPS.input,
        rules.TKGWV2.input
    default_target: True
